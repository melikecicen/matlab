Creating a New Class(2/2) Creating a Class Definition TASKLARI;

Task 1
classdef course
end
Task 1 Açıklama:
classdef: Matlab da sınıf tanımlamak için kullanılır.Burada course adında bır sınıf tanımlandı.


Task 2
c = course
Task 2 Açıklama:
c: adı altında bir nesne oluşrutruldu,course sınıf adı ile tanımlandı.Yani course adlı bir sınıftan nesne tanımlandı


Task 3
classdef course
    properties
        Name
        Level
        Waypoints
    end
end
Task 3 Açıklama:
properties:Bir sınıfa ait özellikler için kullanılır Burada ise tanımlanan course sınıfına özellikler tanımlandı(isim,level ve rotaları)



Task 4
c = course
lvl = c.Level
Task 4 Açıklama: Nesne atamasından sonra level özelliğine sahip olduğu doğrulandı.


Task 5 
c.Level = "White"
Task 5 Açıklama:Course nesnesine atamış olunan level özelliğinin seviyesinin white olduğu belirtilmiştir.


Task 6
c.Level = 42
Task 6 Açıklama:Level özelliğinin seviyesini 42 ile değiştirildi.


**Classes Within Classes TASKLARI;
Task 1
classdef idstick
    properties
        SerialNumber
        Status
        Participant
        Course
        Timestamps
    end
end
Task 1 Açıklama:
idstick: adında bir sınıf tanımlandı.
properties: ile idstick sınıfına özellikler atandı.(Seri numarası(Serial number), Durum Katılımcı (Status), Kurs(Course), Zaman damgaları(Timestamps)


Task 2
id = idstick
id.SerialNumber = 1234
Task 2 Açıklama:id adında ID stick nesnesi oluşturuldu.SerialNumber özelliği ile kimliği 1234 ile ayarlandı.


Task 3 
id.Course = c
Task 3 Açıklama:id 'nin course özelilği c olarak atandı.


Task 4
w = id.Course.Waypoints
Task 4 Açıklama: w:değişken
Waypoints:yol noktaları
id 'nin course nesnesinin yol noktaları özelliğinde saklanan yol noktalarının listesini alınıp sonucu w adlı bir değişkene kaydedildi.


**Giving Your Class Functionality(2/3) Adding a Method to a Class TASKLARI;
Task 1
classdef idstick
    properties
        SerialNumber
        Status
        Participant
        Course
        Timestamps
    end
    methods
        function signal(id,ok)
            if ok
                disp("Beep")
            else
                disp("Buzz")
            end
        end
    end
end
Task 1 Açıklama:
methods : idstick ile tanımlanmış olan sınıfın yöntemlerini listler.
funtion signal :ile sinyal yöntemi eklendi



Task 2
signal(id,true)
Task 2 Açıklama:Signal yöntemi çağırarak ilk girdiyi idstick nesnesinden id'yi seçip ve başarılı bir check-in yanıtını simüle etmek için ikinci giriş olarak true kullanıldı


Task 3 
classdef idstick
    properties
        SerialNumber
        Status
        Participant
        Course
        Timestamps
    end
    methods
        function signal(id,ok)
            if ok
                if (id.Status == "Ready") || (id.Status == "Done")
                    disp("Beep beep")
                else
                    disp("Beep")
                end
            else
                disp("Buzz")
            end
        end
    end
end
Task 3 Açıklama:
Signal yöntemini yeni değerler atandı.

**Giving Your Class Functionality(3/3) Adding More Methods TASKLARI;
Task 1
classdef idstick
    properties
        SerialNumber
        Status
        Participant
        Course
        Timestamps
    end
    methods
        function signal(id,ok)
            if ok
                if (id.Status == "Ready") || (id.Status == "Done")
                    disp("Beep beep")
                else
                    disp("Beep")
                end
            else
                disp("Buzz")
            end
        end
        function id= register(id,name,course)
            id.Participant = name;
            id.Course = course;
        end
    end
end
Task 1 Açıklama:
idstick sınıfına register kaydetme fonksiyonu eklendi bu sayede katılımcı(participant) özelliği ile girilen değer name olarak kaydedilir.
course ataması ile de girilen değer course olarak kaydedilir.


Task 2
idout = register(id,"Erik",c)
Task 2 Açıklama:Erik adında katılımcıyı register yöndemi ile kaydedip sonucu ID nesnesine atandı


Task 3 
p1 = id.Participant
p2 = idout.Participant
Task 3 Açıklama:
id'nin Participant özellik değerini p1're atandı.
idout'un Participant özellik değerini p2 'ye atandı

Task 4 
classdef idstick
    properties
        SerialNumber
        Status
        Participant
        Course
        Timestamps
    end
    methods
        function signal(id,ok)
            if ok
                if (id.Status == "Ready") || (id.Status == "Done")
                    disp("Beep beep")
                else
                    disp("Beep")
                end
            else
                disp("Buzz")
            end
        end
        function id= register(id,name,course)
            id.Participant = name;
            id.Course = course;
            id.Status = "Ready";
            signal(id,true)
        end
    end
end
Task 4 Açıklama:idstick sınıfının register yöntemi değiştirildi.Status özelliğini Ready olarak ayarlandı.Sinyal yöntemi çağırıldı.

**Constructor Methods(2/2) Adding Constructor Methods TASKLARI;
Task 1 
classdef idstick
    properties
        SerialNumber
        Status
        Participant
        Course
        Timestamps
    end
    methods
        function id= idstick(snum)
            id.SerialNumber = snum;
        end
        function signal(id,ok)
            if ok
                if (id.Status == "Ready") || (id.Status == "Done")
                    disp("Beep beep")
                else
                    disp("Beep")
                end
            else
                disp("Buzz")
            end
        end
        function id = register(id,name,course)
            id.Participant = name;
            id.Course = course;
            id.Timestamps = NaT(size(course.Waypoints));
            id.Status = "Ready";
            signal(id,true)
        end
    end
end
Task 1 Açıklama:idstick'e, snum'u alan constructor yöntemi eklendi.SerialNumber özelliği değeri snum'a eşit olarak ayarladı.

Task 2
id = idstick(54321)
Task 2 Açıklama:id adında bir idstick nesnesine 54321 seri numaralı nesne oluşturuldu.

Task 3
classdef course
    properties
        Name
        Level
        Waypoints
    end
    methods
        function c = course (name,lvl,waypts)
            c.Name = name;
            c.Level  = lvl;
            c.Waypoints = waypts;
        end
    end
end
Task 3 Açıklama:
methods ile course sınıfına Name, Level, Waypoints özelliklerine atayan bir yöntem eklenildi.


Task 4
c = course("Family Fun","White",w);
Task 4 Açıklama:Family Fun adında White zorluk seviyesinde ve w rotasında saklanan ara noktalarla c adında bir course nesnesi oluşturuldu.

**Overloading and Precedence(5/6) Adding a Custom Display TASKI;
Task 1
classdef course
    properties
        Name
        Level
        Waypoints
    end
    methods
        function c = course(name,lvl,waypts)
            c.Name = name;
            c.Level = lvl;
            c.Waypoints = waypts;
        end
        function ok = checkWaypoint(c,id,wayptidx)
            [~,prevwpidx] = max(id.Timestamps);
            ok = (wayptidx == (1+prevwpidx));
        end
        function disp(c)
            str = c.Level + " course '" + c.Name + "' with " + ...
                numel(c.Waypoints) + " waypoints";
            disp(str)
        end
    end
end
Task 1 Açıklama:course sınıfına rota bilgileri level(c.level), course (c.course),name(c.name), ile(with), numwaypoints(numel(c.Waypoints) + " waypoints") ile birlikte görüntüleyen bir disp yöntemi eklenildi.
