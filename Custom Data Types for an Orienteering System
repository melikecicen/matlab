
Using Custom Objects to Simulate an Orienteering Event TASKLARI ;

Task 1
c = course("Family Fun","White",w)
Task 1 Açıklama :
course: Course adında bir nesne oluşturuldu.
Family fun: Baş harfinin büyük olması matlab da sınıf tanımlarken bu şekilde kullanılır aynı zamanda name (kursun adı) özelliği yerine family fun atandı.
White: Zorluk seviyesi olan difficulty yerine white yani beyaz olduğu yazıldı.
W: kursa atıf yapılan vektörün rol ataması yapıldı.

Task 2
id = idstick(123456)
Task 2 Açıklama:
id adı verilen kimlik çubuğuna idstick sınıfı belirtilip bu sınıfa bir nesne ataması yapıldı.


Task 3
whos
Task 3 Açıklama:
whos:Değişkenlerin boyutlarını ve türlerini görüntülemek için kullanıldı.


Task 4
properties(id)
methods(id)
Task 4 Açıklama:
properties:Nesne veya sınıfın özelliklerinin isimlerini lisetelyen bir fonksiyondur.
methods:Nesne veya sınıfın yöntemlerini listeleyen bir fonksiyondur.


Task 5
id = register(id,"Astrid",c)
Task 5 Açıklama:
register:kaydetme fonksiyonudur.Dizi kimliğindeki kimlik çubuğunu kullanarak "Astrid"i Family fun kursuna c adlı bir kurs nesnesini temsil eden id kaydetmek için kayıt işlevi olan register kullanıldı. 


Task 6
id = checkWaypoint(id,42)
Task 6 Açıklama:
checkWaypoint:Kontrol etme fonksiyonudur.Astrid adlı kişilerin özelliklerini belli bir rota da kontol etmek için kullanıldı.Aynı zamanda matlabda bazı fonksiyonlar için özelliklik
olan noktalı virgül kullanılmayarak güncellenmiş en son hali görünmektedir.


Vectors of Custom Objects TASKLARI;    

Task 1
c(2) = course("Insanity","Red", w2)
Task 1 Açıklama:
course: Adında bir nesne oluşturuldu.
Red: Zorluk seviyesi olan difficulty yerine red yani kırmızı olduğu yazıldı.
w2:vektöründe saklanan yol noktaları ile yeni bir rota nesnesi oluşturmak için rota işlevi kullanıldı. 
Bu yeni rotayı c'nin ikinci öğesi olarak saklamak için standart indeksleme kullanıldı c(2).


Task 2
id = idstick([123456, 567890, 987654])
Task 2 Açıklama:id adı verilen bir kimlik çubuğu nesneleri dizisi oluşturmak için idstick işlevi kullanıldı.


Task 3
id(1) = register(id(1),"Astrid",c(1))
Task 3 Açıklama:
register:Kayıt etme fonksiyodur.
Dizi kimliğindeki ilk kimlik çubuğunu kullanarak "Astrid"i c'nin ilk öğesiyle temsil edilen Family fun kursuna kaydetmek için kayıt işlevi olan register kullanıldı.
Çıkışı ona geri atayarak kimliği (1) güncellenildi.

Task 4
id(2) = register(id(2),"Erik",c(1))
Task 4 Açıklama:
register:Kayıt etme fonksiyonudur.
Erik'i Family Fun kursuna kaydetmek için de kayıt fonksiyonu olan register kullanıldı, ancak dizi kimliğindeki ikinci kimlik
çubuğunu kullanıldı. Çıktıyı ona geri atayarak Erik'in kimlik çubuğunu (id(2)) güncellendi.Aynı zamanda Family Fun kursu c'nin ilk unsurudur.) 


Task 5
id(1) = checkWaypoint(id(1),42)
Task 5 Açıklama:
checkWaypoint:Kontol etme fonksiyonudur.42 numaralı geçiş noktasında Astrid'in kimlik çubuğunu (kimliğin ilk öğesi) kontrol etmek için checkWaypoint işlevini
kullanıldı. Çıktıyı ona geri atayarak kimlik çubuğunu güncellendi id(1).
